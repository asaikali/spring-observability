#!/bin/bash

# Get the directory of the current script
SCRIPT_DIR=$(dirname "$(realpath "$0")")

# Check if a command was provided
if [ $# -eq 0 ]; then
    echo "Usage: pg [command]"
    echo "Commands:"
    echo "  start  - Start PostgreSQL containers"
    echo "  stop   - Stop PostgreSQL containers"
    echo "  clean  - Stop PostgreSQL containers and remove volumes"
    echo "  status - Check if PostgreSQL containers are running and display connection information"
    exit 1
fi

# Execute the appropriate command
case "$1" in
    start)
        echo "Starting PostgreSQL containers..."
        docker compose -f ${SCRIPT_DIR}/docker-compose.yaml up -d
        docker compose -f ${SCRIPT_DIR}/docker-compose.yaml \
            ps --format "table {{.ID}}\t{{.Image}}\t{{.Status}}\t{{.Ports}}\t{{.Names}}"
        ;;
    stop)
        echo "Stopping PostgreSQL containers..."
        docker compose -f ${SCRIPT_DIR}/docker-compose.yaml down
        ;;
    clean)
        echo "Cleaning up PostgreSQL containers and volumes..."
        docker compose -f ${SCRIPT_DIR}/docker-compose.yaml down -v
        ;;
    status)
        echo "Checking PostgreSQL containers status..."
        # Check if containers are running
        if docker compose -f ${SCRIPT_DIR}/docker-compose.yaml ps --services --filter "status=running" | grep -q "postgres"; then
            echo "PostgreSQL is running"
            echo "PostgreSQL port: 15432"
            echo "PostgreSQL connection: localhost:15432"
            echo "Username: postgres"
            echo "Password: password"

            if docker compose -f ${SCRIPT_DIR}/docker-compose.yaml ps --services --filter "status=running" | grep -q "pgadmin"; then
                echo "pgAdmin is running"
                echo "pgAdmin URL: http://localhost:15433"
                echo "pgAdmin login: admin@example.com"
                echo "pgAdmin password: admin"
            else
                echo "pgAdmin is not running"
            fi
        else
            echo "PostgreSQL is not running"
        fi
        ;;
    *)
        echo "Unknown command: $1"
        echo "Usage: pg [command]"
        echo "Commands:"
        echo "  start  - Start PostgreSQL containers"
        echo "  stop   - Stop PostgreSQL containers"
        echo "  clean  - Stop PostgreSQL containers and remove volumes"
        echo "  status - Check if PostgreSQL containers are running and display connection information"
        exit 1
        ;;
esac
