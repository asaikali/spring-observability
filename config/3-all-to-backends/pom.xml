<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns="http://maven.apache.org/POM/4.0.0"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>com.example</groupId>
    <artifactId>config</artifactId>
    <version>0.0.1-SNAPSHOT</version>
  </parent>
  <groupId>com.example.config</groupId>
  <artifactId>3-all-to-backends</artifactId>
  <version>0.0.1-SNAPSHOT</version>

  <dependencies>

    <!-- web dependencies -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-web</artifactId>
    </dependency>

    <!-- database dependencies -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-data-jpa</artifactId>
    </dependency>
    <dependency>
      <groupId>org.flywaydb</groupId>
      <artifactId>flyway-core</artifactId>
    </dependency>
    <dependency>
      <groupId>org.flywaydb</groupId>
      <artifactId>flyway-database-postgresql</artifactId>
    </dependency>
    <dependency>
      <groupId>org.postgresql</groupId>
      <artifactId>postgresql</artifactId>
      <scope>runtime</scope>
    </dependency>
    <dependency>
      <groupId>com.h2database</groupId>
      <artifactId>h2</artifactId>
      <scope>runtime</scope>
    </dependency>

    <!-- observability dependencies -->
    <!--
      Enables Spring Boot Actuator endpoints like:
      - /actuator/health
      Required to activate observability auto-configuration.
      Without this, observability features like metrics and tracing will not activate.
    -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-actuator</artifactId>
    </dependency>

    <!--
      Micrometer Tracing bridge for Brave (Zipkin).
      This provides the integration layer between Micrometer's tracing API
      and Brave's implementation of span creation, context propagation, etc.
    -->
    <dependency>
      <groupId>io.micrometer</groupId>
      <artifactId>micrometer-tracing-bridge-brave</artifactId>
    </dependency>

    <!--
      Required by Brave to send spans to a Zipkin-compatible backend (e.g., Tempo).
      Sends spans via HTTP to:
      - POST http://localhost:9411/api/v2/spans
      Tempo must be running with Zipkin compatibility enabled.
    -->
    <dependency>
      <groupId>io.zipkin.reporter2</groupId>
      <artifactId>zipkin-reporter-brave</artifactId>
    </dependency>

    <!--
      Micrometer Observability integration for JDBC DataSources.
      Automatically creates observation spans for database queries,
      including connection, statement execution, and transaction boundaries.

      When used with Micrometer Tracing and a compatible tracer (e.g., Brave),
      it allows capturing SQL query performance as part of your distributed traces.
    -->
    <dependency>
      <groupId>net.ttddyy.observation</groupId>
      <artifactId>datasource-micrometer-spring-boot</artifactId>
    </dependency>

    <!--
      Registers Prometheus as the Micrometer backend.
      Exposes all metrics in Prometheus-compatible format at:
      - GET /actuator/prometheus
      Prometheus scrapes this endpoint at regular intervals.
    -->
    <dependency>
      <groupId>io.micrometer</groupId>
      <artifactId>micrometer-registry-prometheus</artifactId>
    </dependency>

    <!--
      Loki Logback Appender for structured log shipping.
      - Formats logs into Loki's expected JSON push format
      - Sends via HTTP POST to /loki/api/v1/push
      Used with Spring Bootâ€™s default Logback setup.
    -->
    <dependency>
      <groupId>com.github.loki4j</groupId>
      <artifactId>loki-logback-appender</artifactId>
      <version>1.6.0</version>
    </dependency>


    <!-- Test dependencies -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-test</artifactId>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
    <plugins>
      <plugin>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-maven-plugin</artifactId>
      </plugin>
    </plugins>
  </build>
</project>
